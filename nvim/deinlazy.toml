[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = 'denite.nvim'

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'c0r73x/neotags.nvim'
on_ft = ['python', 'ruby']
hook_add = '''
  let g:neotags_enabled = 1
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.config/nvim/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'tweekmonster/deoplete-clang'
depends = 'deoplete.nvim'
on_ft = ['c', 'cpp']
hook_source = '''
  autocmd FileType c,cpp let b:clang2_orig_maps = {}
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = 'deoplete.nvim'
on_ft = 'python'

[[plugins]]
repo = 'Shougo/deoplete-rct'
depends = 'deoplete.nvim'
on_ft = 'ruby'

[[plugins]]
repo = 'zchee/deoplete-go'
depends = 'deoplete.nvim'
on_ft = 'go'
build = 'make'
hook_source = '''
  let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
  let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
  let g:deoplete#sources#go#use_cache = 1
  let g:deoplete#sources#go#json_directory = '~/.cache/deoplete/go/$GOOS_$GOARCH'
'''

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'tyru/caw.vim'
on_map = {nxv = '<plug>'}
hook_add = '''
  nmap gc <plug>(caw:prefix)
  xmap gc <plug>(caw:prefix)
  nmap gcc <Plug>(caw:hatpos:toggle)
  xmap gcc <Plug>(caw:hatpos:toggle)
  vmap gcc <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)a
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_ft = 'python'
hook_soure = '''
  let g:indent_guides_enable_on_vim_startup=1
  let g:indent_guides_start_level=2
  let g:indent_guides_guide_size=1
  let g:indent_guides_space_guides=1
  let g:indent_guides_auto_colors = 0
  hi IndentGuidesOdd  ctermbg=235
  hi IndentGuidesEven ctermbg=237
'''

[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = 'ruby'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_types = 1
  let g:go_highlight_operators = 1
  let g:go_highlight_build_constraints = 1
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'pearofducks/ansible-vim'

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'tf'
