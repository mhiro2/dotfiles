[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'LeafCage/yankround.vim.git'
hook_add = '''
  nmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
  let g:yankround_max_history = 50
  nnoremap <silent>g<C-p> :<C-u>CtrlPYankRound<CR>
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'vim-scripts/quickhl.vim'
hook_add = '''
  nmap qj <Plug>(quickhl-manual-this)
  xmap qj <Plug>(quickhl-manual-this)
  nmap qJ <Plug>(quickhl-manual-reset)
  xmap qJ <Plug>(quickhl-manual-reset)
  nmap ql <Plug>(quickhl-cword-toggle)
'''

[[plugins]]
repo = 'rhysd/migemo-search.vim'
if = "executable('cmigemo')"
hook_add = '''
  cnoremap <expr><CR> migemosearch#replace_search_word()."\<CR>"
'''

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
  " fix
  let g:ale_fix_on_save = 1
  let g:ale_fixers = {
    \ '*':          ['remove_trailing_lines', 'trim_whitespace'],
    \ 'css':        ['prettier'],
    \ 'go':         ['goimports'],
    \ 'javascript': ['eslint', 'prettier'],
    \ 'json':       ['prettier'],
    \ 'html':       ['prettier'],
    \ 'markdown':   ['prettier'],
    \ 'python':     ['isort', 'yapf'],
    \ 'ruby':       ['rubocop'],
    \ 'terraform':  ['terraform'],
    \ 'typescript': ['eslint', 'prettier'],
    \ 'yaml':       ['prettier'],
  \}

  " lint
  let g:ale_linters = {
    \ 'bash':       ['shellcheck'],
    \ 'dockerfile': ['hadolint'],
    \ 'go':         ['gofmt', 'golint'],
    \ 'json':       ['jsonlint'],
    \ 'python':     ['flake8', 'mypy'],
    \ 'ruby':       ['rubocop'],
    \ 'sh':         ['shellcheck'],
    \ 'terraform':  ['tflint'],
    \ 'yaml':       ['yamllint'],
  \ }
  let g:ale_lint_delay = 400
  let g:ale_lint_on_text_changed = 'never'

  " python
  let g:ale_python_mypy_options = '--ignore-missing-imports'

  let g:ale_echo_msg_error_str = 'E'
  let g:ale_echo_msg_warning_str = 'W'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
  let g:ale_sign_warning = '⚠'
  let g:ale_sign_error = '✖'
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  source ~/.config/nvim/plugins/lightline.rc.vim
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['ale', 'lightline.vim']
hook_add = '''
  let g:lightline.component_expand = {
    \   'linter_checking': 'lightline#ale#checking',
    \   'linter_warnings': 'lightline#ale#warnings',
    \   'linter_errors': 'lightline#ale#errors',
    \   'linter_ok': 'lightline#ale#ok',
    \ }
  let g:lightline.component_type = {
    \   'linter_checking': 'left',
    \   'linter_warnings': 'warning',
    \   'linter_errors': 'error',
    \   'linter_ok': 'left',
    \ }
  let g:lightline#ale#indicator_checking = "\uf110 "
  let g:lightline#ale#indicator_warnings = "\uf071 "
  let g:lightline#ale#indicator_errors = "\uf05e "
  let g:lightline#ale#indicator_ok = "\uf00c "
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'tomasr/molokai'
